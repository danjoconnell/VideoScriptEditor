<UserControl x:Class="VideoScriptEditor.Views.Cropping.CroppingVideoOverlayView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:commonviews="clr-namespace:VideoScriptEditor.Views.Common"
             xmlns:local="clr-namespace:VideoScriptEditor.Views.Cropping"
             prism:ViewModelLocator.AutoWireViewModel="True"
             mc:Ignorable="d" d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <commonviews:WidthAndHeightToRectConverter x:Key="WidthAndHeightToRectConverter" />
    </UserControl.Resources>
    <Rectangle x:Name="_overlayRectangleElement" Fill="#80000000" Loaded="OnOverlayRectangleLoaded">
        <Rectangle.OpacityMask>
            <DrawingBrush ViewportUnits="Absolute">
                <DrawingBrush.Viewport>
                    <MultiBinding Converter="{StaticResource WidthAndHeightToRectConverter}">
                        <Binding Path="ActualWidth" ElementName="_overlayRectangleElement" Mode="OneWay" />
                        <Binding Path="ActualHeight" ElementName="_overlayRectangleElement" Mode="OneWay" />
                    </MultiBinding>
                </DrawingBrush.Viewport>
                <DrawingBrush.Drawing>
                    <DrawingGroup>
                        <!-- This full-size transparent GeometryDrawing is a workaround for an issue where the Rectangle opacity
                             incorrectly becomes fully opaque if a crop PathGeometry touches three sides of the Rectangle. -->
                        <GeometryDrawing Brush="Transparent">
                            <GeometryDrawing.Geometry>
                                <RectangleGeometry Rect="{Binding Viewport, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DrawingBrush}}}" />
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>

                        <!-- GeometryDrawing providing the Opacity Mask -->
                        <GeometryDrawing Brush="White">
                            <GeometryDrawing.Geometry>
                                <CombinedGeometry GeometryCombineMode="Exclude">
                                    <CombinedGeometry.Geometry1>
                                        <RectangleGeometry Rect="{Binding Viewport, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DrawingBrush}}}" />
                                    </CombinedGeometry.Geometry1>
                                    <CombinedGeometry.Geometry2>
                                        <!-- Acts as a pseudo-ItemsControl for the ViewModel's ActiveSegments collection -->
                                        <GeometryGroup FillRule="NonZero" Children="{Binding CropGeometries, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CroppingVideoOverlayView}}}" />
                                    </CombinedGeometry.Geometry2>
                                </CombinedGeometry>
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                    </DrawingGroup>
                </DrawingBrush.Drawing>
            </DrawingBrush>
        </Rectangle.OpacityMask>
        <Rectangle.Style>
            <Style TargetType="{x:Type Rectangle}">
                <Setter Property="Visibility" Value="Visible" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ActiveSegments.Count, Mode=OneWay}" Value="0">
                        <!-- The Rectangle opacity is fully opaque when there are no Crop Geometries -->
                        <Setter Property="Visibility" Value="Hidden" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Rectangle.Style>
    </Rectangle>
</UserControl>
